var app = require("../app");
var debug = require("debug")("project1:server");
var https = require("https");
const certificateString = `-----BEGIN CERTIFICATE-----
MIIE/jCCA+agAwIBAgISBGOU9jB+ReGm9NdlVN8nAjWeMA0GCSqGSIb3DQEBCwUA
MDIxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MQswCQYDVQQD
EwJSMzAeFw0yNDA0MjYwNTQyMjRaFw0yNDA3MjUwNTQyMjNaMBwxGjAYBgNVBAMT
EXd3dy5tZWdtYWdyb3VwLmNvMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC
AQEA53UuNJYvWHOZEauJ8/aEeejUBJOcEjrZPPKGKWaEQ0Xq5pA/73/WtHGxGI7J
niA2vLFCM3tug2fR/3aiEvY77iJfYleHq+m1SNqv1BZzpD20Dqyiz63Y9PK/AJgz
tH45YqHdJh+bQky4926+AEIY3SeJ4ASbIxKo8hL4Wex0AL/dxHwsRWmTyE+whfiy
ZMo8zwAx648FZIO0sfF6R2wT//Fmvlu4xjx710IBKHw237e7t4McU5+yEwJ8ptNB
/gEmqFWmRMRvwHkX//Zcj4FleZ9sF69IFtebIUCGzhAqkQHlSee8dP+yVvHoVkf3
4I0NPcRTjZUB1DD2tVT86664sQIDAQABo4ICIjCCAh4wDgYDVR0PAQH/BAQDAgWg
MB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMBAf8EAjAAMB0G
A1UdDgQWBBRxpQHAsJ7UXjKv2Nn3cok/R0XYFTAfBgNVHSMEGDAWgBQULrMXt1hW
y65QCUDmH6+dixTCxjBVBggrBgEFBQcBAQRJMEcwIQYIKwYBBQUHMAGGFWh0dHA6
Ly9yMy5vLmxlbmNyLm9yZzAiBggrBgEFBQcwAoYWaHR0cDovL3IzLmkubGVuY3Iu
b3JnLzArBgNVHREEJDAigg1tZWdtYWdyb3VwLmNvghF3d3cubWVnbWFncm91cC5j
bzATBgNVHSAEDDAKMAgGBmeBDAECATCCAQQGCisGAQQB1nkCBAIEgfUEgfIA8AB3
AD8XS0/XIkdYlB1lHIS+DRLtkDd/H4Vq68G/KIXs+GRuAAABjxkkDukAAAQDAEgw
RgIhAI7yaWR7HS2fppe5Do8m7+d6cIJG1OdF02SQstg2WEWXAiEAyQYoZPFLov1A
/q0oWXTThUcCvr470HjbVbcvHQR8hpIAdQBIsONr2qZHNA/lagL6nTDrHFIBy1bd
LIHZu7+rOdiEcwAAAY8ZJA7yAAAEAwBGMEQCIBggpLAMrS/Awuh1odus5EewGPCW
CRBOstQ7iJbwa9cHAiBJsn73AckEGXVoiyVtzoYLsqvNes9+/n0yZaBUlgMcRjAN
BgkqhkiG9w0BAQsFAAOCAQEAL9ceKeG9ZgLtNwaCB4MLDkQqI5bT0wnlS9vIIrCA
LR0aHpFVvqNziQa1chPlLjYO2u7HHKvaMK1f+ftbLjZo/7CguV1RnpEKGi2PtGDm
ewl09HRB1NZmtIwAW1puN2YZShnB88x1RA3Fc6+h2XkhBnPyVIc/zv/3t8xAaxwk
r2NJf6hOLQ6ewO7caOzkCMJuQRTaAs4Zwb+oetqMzeh135vGC1E7YAiZ337/cWK/
83rYvFLynBsNaXaoCU4gF9At08k1kj0cm1T+ivwuP26YLw2IN1OsRelsfZLAteA5
Ui3DK2VjOT17h2Z4U6fy85Jb+yWtwfAnz2pzSOcMGveyGw==
-----END CERTIFICATE-----`;

const privateKeyString = `-----BEGIN RSA PRIVATE KEY-----
MIIEpQIBAAKCAQEA53UuNJYvWHOZEauJ8/aEeejUBJOcEjrZPPKGKWaEQ0Xq5pA/
73/WtHGxGI7JniA2vLFCM3tug2fR/3aiEvY77iJfYleHq+m1SNqv1BZzpD20Dqyi
z63Y9PK/AJgztH45YqHdJh+bQky4926+AEIY3SeJ4ASbIxKo8hL4Wex0AL/dxHws
RWmTyE+whfiyZMo8zwAx648FZIO0sfF6R2wT//Fmvlu4xjx710IBKHw237e7t4Mc
U5+yEwJ8ptNB/gEmqFWmRMRvwHkX//Zcj4FleZ9sF69IFtebIUCGzhAqkQHlSee8
dP+yVvHoVkf34I0NPcRTjZUB1DD2tVT86664sQIDAQABAoIBAQChNkYTjJO3iPSR
kShKC2ckPl4GPgXT0LdkswttJKF09erx4oEVwLX8AsA1+aZGg+t8K/6POyazUgm7
ZJbonCcL61cCeTLfM63365HSKD0tpWiXW/keq9jUa4tLz7cbvVsc7t7I4fTTDfs7
JCAkr+T/jL2EkdC4chPIYBwpDf+SUL2yjyZ0NGdxEq3Dlg9kfINFI0KkEFPaLrkw
PMKPxOWg51BJcnD6E+gAoLaMMjVE6VgK15i6V2VI+hkxBy63iptuMkdHdTAI09+o
p/Obn6g+Ty9lhSKf1MQZ2vKztmACQBtTg4hYy6bQt23EjJcnOqcVuSh/32zN+ceS
EzCK18oBAoGBAP3lfAZeukaIBbi4QXvNwv/f6idCKW/Qftj7AyWRLE//8ASs+AXQ
XJqX8uByTxeU03P6hn6INEDU1XpKJDwIocciUdMuJ/lDI8WHpqrBPCIaUv1Q8a+U
ohAWmNnNjCW2jKvrHK/NFPIqplDTxukh0iv28Z8W/NwSIo2spjWcBenRAoGBAOlg
Gnv9zvN9A7KNJhmKr16HgodqXxW1BqO9Ik3BNH2lRQ/7MvjgKmbjlnJspdZZ1ZNd
T94jcjge5uwDL2AOgFavnO1gLXp0XFAbHZJ1Pl8SVYZ9W/X4avIABX4/dlprq/rY
klQNgrKCXpFElkUKIOMDWrnuXshPoLcioirxDrjhAoGBAIAnrYqpley0C+9JUgRj
v+HX7CEUzEWcP+rWCKiVtoBK96PkiuykV5nQyM9x42pLvM/1zJ1hsr5mr7qiYdfL
o50YPaUSzyqKMSwrZH0cPHYaQ3mJufSeWY81WMHXdr4yfp7odfpm0gPKc1ipDOXw
JF38r8lVmRycKsTIOL0mm/WBAoGBAIKWhDtdirA1BBylXuxr7jW3HhMoMoyy/0Qg
UVGxCu5DzKFkruEUjqWENGtS4HlRS3FqhYaHzyIYKJ9oKNpXQvk+y1EIwGoFMqKg
iauqb3xDhhf7jbnViAJigLBkUpXGKjXzee4OoVPCH6ip+Gwpfr2I4vunpuHvrL7N
YnEk8lgBAoGAK5sKPntj/6/YXOr/bJoyZPR3Sbn0kGunGreW9vpD7JP18n5QocD5
r/mt68oe+nLU+9nlzTbOLM5Lt3KucvHf4nJdn1M9yu7GZIE0dHHEcQLafap97n7u
a0/cS+6fmuDScyiJJ3t4ZzfwnQE5z3vx8n1fcpkhVae+Pgf3wM7hM/8=
-----END RSA PRIVATE KEY-----`;

const fullChain = `-----BEGIN CERTIFICATE-----
MIIFFjCCAv6gAwIBAgIRAJErCErPDBinU/bWLiWnX1owDQYJKoZIhvcNAQELBQAw
TzELMAkGA1UEBhMCVVMxKTAnBgNVBAoTIEludGVybmV0IFNlY3VyaXR5IFJlc2Vh
cmNoIEdyb3VwMRUwEwYDVQQDEwxJU1JHIFJvb3QgWDEwHhcNMjAwOTA0MDAwMDAw
WhcNMjUwOTE1MTYwMDAwWjAyMQswCQYDVQQGEwJVUzEWMBQGA1UEChMNTGV0J3Mg
RW5jcnlwdDELMAkGA1UEAxMCUjMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
AoIBAQC7AhUozPaglNMPEuyNVZLD+ILxmaZ6QoinXSaqtSu5xUyxr45r+XXIo9cP
R5QUVTVXjJ6oojkZ9YI8QqlObvU7wy7bjcCwXPNZOOftz2nwWgsbvsCUJCWH+jdx
sxPnHKzhm+/b5DtFUkWWqcFTzjTIUu61ru2P3mBw4qVUq7ZtDpelQDRrK9O8Zutm
NHz6a4uPVymZ+DAXXbpyb/uBxa3Shlg9F8fnCbvxK/eG3MHacV3URuPMrSXBiLxg
Z3Vms/EY96Jc5lP/Ooi2R6X/ExjqmAl3P51T+c8B5fWmcBcUr2Ok/5mzk53cU6cG
/kiFHaFpriV1uxPMUgP17VGhi9sVAgMBAAGjggEIMIIBBDAOBgNVHQ8BAf8EBAMC
AYYwHQYDVR0lBBYwFAYIKwYBBQUHAwIGCCsGAQUFBwMBMBIGA1UdEwEB/wQIMAYB
Af8CAQAwHQYDVR0OBBYEFBQusxe3WFbLrlAJQOYfr52LFMLGMB8GA1UdIwQYMBaA
FHm0WeZ7tuXkAXOACIjIGlj26ZtuMDIGCCsGAQUFBwEBBCYwJDAiBggrBgEFBQcw
AoYWaHR0cDovL3gxLmkubGVuY3Iub3JnLzAnBgNVHR8EIDAeMBygGqAYhhZodHRw
Oi8veDEuYy5sZW5jci5vcmcvMCIGA1UdIAQbMBkwCAYGZ4EMAQIBMA0GCysGAQQB
gt8TAQEBMA0GCSqGSIb3DQEBCwUAA4ICAQCFyk5HPqP3hUSFvNVneLKYY611TR6W
PTNlclQtgaDqw+34IL9fzLdwALduO/ZelN7kIJ+m74uyA+eitRY8kc607TkC53wl
ikfmZW4/RvTZ8M6UK+5UzhK8jCdLuMGYL6KvzXGRSgi3yLgjewQtCPkIVz6D2QQz
CkcheAmCJ8MqyJu5zlzyZMjAvnnAT45tRAxekrsu94sQ4egdRCnbWSDtY7kh+BIm
lJNXoB1lBMEKIq4QDUOXoRgffuDghje1WrG9ML+Hbisq/yFOGwXD9RiX8F6sw6W4
avAuvDszue5L3sz85K+EC4Y/wFVDNvZo4TYXao6Z0f+lQKc0t8DQYzk1OXVu8rp2
yJMC6alLbBfODALZvYH7n7do1AZls4I9d1P4jnkDrQoxB3UqQ9hVl3LEKQ73xF1O
yK5GhDDX8oVfGKF5u+decIsH4YaTw7mP3GFxJSqv3+0lUFJoi5Lc5da149p90Ids
hCExroL1+7mryIkXPeFM5TgO9r0rvZaBFOvV2z0gp35Z0+L4WPlbuEjN/lxPFin+
HlUjr8gRsI3qfJOQFy/9rKIJR0Y/8Omwt/8oTWgy1mdeHmmjk7j1nYsvC9JSQ6Zv
MldlTTKB3zhThV1+XWYp6rjd5JW1zbVWEkLNxE7GJThEUG3szgBVGP7pSWTUTsqX
nLRbwHOoq7hHwg==
-----END CERTIFICATE-----`;

const port = normalizePort(process.env.PORT || "3000");
app.set("port", port);

const privateKeyBuffer = Buffer.from(privateKeyString);
const certificateBuffer = Buffer.from(certificateString);

const options = {
  key: privateKeyBuffer,
  cert: certificateBuffer,
  ca: fullChain,
};

var server = https.createServer( options,app);

server.listen(port);
server.on("error", onError);
server.on("listening", onListening);

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

function onError(error) {
  if (error.syscall !== "listen") {
    throw error;
  }

  var bind = typeof port === "string" ? "Pipe " + port : "Port " + port;

  switch (error.code) {
    case "EACCES":
      console.error(bind + " requires elevated privileges");
      process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(bind + " is already in use");
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  var addr = server.address();
  var bind = typeof addr === "string" ? "pipe " + addr : "port " + addr.port;
  debug("Listening on " + bind);
}
